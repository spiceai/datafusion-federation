---
source: test/src/main.rs
description: Federated Query Explain
expression: display_string
---
Federated
 Sort: supplier.s_name ASC NULLS LAST
  Projection: supplier.s_name, supplier.s_address
    Inner Join:  Filter: supplier.s_nationkey = nation.n_nationkey
      Filter: supplier.s_suppkey IN (<subquery>)
        Subquery:
          Projection: partsupp.ps_suppkey
            Filter: partsupp.ps_partkey IN (<subquery>) AND partsupp.ps_availqty > (<subquery>)
              Subquery:
                Projection: part.p_partkey
                  Filter: part.p_name LIKE Utf8("forest%")
                    TableScan: part
              Subquery:
                Projection: Float64(0.5) * sum(lineitem.l_quantity)
                  Aggregate: groupBy=[[]], aggr=[[sum(lineitem.l_quantity)]]
                    Filter: lineitem.l_partkey = outer_ref(partsupp.ps_partkey) AND lineitem.l_suppkey = outer_ref(partsupp.ps_suppkey) AND lineitem.l_shipdate >= CAST(Utf8("1994-01-01") AS Date32) AND lineitem.l_shipdate < CAST(Utf8("1994-01-01") AS Date32) + IntervalMonthDayNano("IntervalMonthDayNano { months: 12, days: 0, nanoseconds: 0 }")
                      TableScan: lineitem
              TableScan: partsupp
        TableScan: supplier projection=[s_suppkey, s_name, s_address, s_nationkey]
      Filter: nation.n_name = Utf8("CANADA")
        TableScan: nation projection=[n_nationkey, n_name]
